{
	"name": "df_transform_hospital_admissions",
	"properties": {
		"folder": {
			"name": "Covid"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "hospitalAdmissions"
				},
				{
					"dataset": {
						"referenceName": "ds_date_lookup_dl",
						"type": "DatasetReference"
					},
					"name": "dimDate"
				},
				{
					"dataset": {
						"referenceName": "ds_county_lookup_dl",
						"type": "DatasetReference"
					},
					"name": "countryLookupSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admissions_daily",
						"type": "DatasetReference"
					},
					"name": "sinkDaily"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admissions_weekly",
						"type": "DatasetReference"
					},
					"name": "sinkWeekly"
				}
			],
			"transformations": [
				{
					"name": "aggregateDate"
				},
				{
					"name": "select1"
				},
				{
					"name": "countryLookup"
				},
				{
					"name": "selectReqFieldsFromLookup"
				},
				{
					"name": "splitDailyAndweekly"
				},
				{
					"name": "lookupWeek"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "selectRemoveNotRequired"
				},
				{
					"name": "pivotWeeklyIndicator"
				},
				{
					"name": "pivotDAilyIndicator"
				},
				{
					"name": "selectFinalDaily"
				},
				{
					"name": "sortDailyData"
				},
				{
					"name": "select2"
				},
				{
					"name": "sortWeeklyData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> hospitalAdmissions",
				"source(output(",
				"          date_key as date,",
				"          date as date,",
				"          year as short,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as short,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dimDate",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countryLookupSource",
				"dimDate aggregate(groupBy(year,",
				"          week_of_year),",
				"     start_date = min(date),",
				"          end_date = max(date)) ~> aggregateDate",
				"hospitalAdmissions select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, countryLookupSource lookup(select1@country == countryLookupSource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> countryLookup",
				"countryLookup select(mapColumn(",
				"          country = select1@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqFieldsFromLookup",
				"selectReqFieldsFromLookup split(like(indicator,'Weekly %'),",
				"     disjoint: false) ~> splitDailyAndweekly@(Weekly, Daily)",
				"splitDailyAndweekly@Weekly, derivedColumn1 lookup(reported_year_week == year_week,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupWeek",
				"aggregateDate derive(year_week = toString(year)+\"-W\"+lpad(toString(week_of_year),2,'0')) ~> derivedColumn1",
				"lookupWeek select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          indicator,",
				"          value,",
				"          week_start_date = start_date,",
				"          week_end_date = end_date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRemoveNotRequired",
				"selectRemoveNotRequired pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          source,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     total = sum(value),",
				"     columnNaming: '$N-$V',",
				"     lateral: true) ~> pivotWeeklyIndicator",
				"splitDailyAndweekly@Daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     total = sum(value),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivotDAilyIndicator",
				"pivotDAilyIndicator select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          new_hospital_occupancy = {totalDaily hospital occupancy},",
				"          new_ICU_occupancy = {totalDaily ICU occupancy},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFinalDaily",
				"selectFinalDaily sort(desc(reported_date, true),",
				"     asc(country, true)) ~> sortDailyData",
				"pivotWeeklyIndicator select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          new_hospital_occupancy_count = {total-Weekly new hospital admissions per 100k},",
				"          new_ICU_occupancy_count = {total-Weekly new ICU admissions per 100k},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> sortWeeklyData",
				"sortDailyData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDaily",
				"sortWeeklyData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkWeekly"
			]
		}
	}
}